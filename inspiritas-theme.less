/*!
 * Bootstrap v2.2.1
 *
 * Copyright 2012 Twitter, Inc
 * Licensed under the Apache License v2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Designed and built with all the love in the world @twitter by @mdo and @fat.
 */

/* Fonts */

@font-face { 
    font-family: 'League Gothic';
    src: url('fonts/league_gothic-webfont.eot');
    src: url('fonts/league_gothic-webfont.eot?#iefix') format('eot'), url('fonts/league_gothic-webfont.woff') format('woff'), url('fonts/league_gothic-webfont.ttf') format('truetype'), url('fonts/league_gothic-webfont.svg#webfont3XnFyBvL') format('svg');
    font-weight: normal;
    font-style: normal;
}
@font-face { 
    font-family: 'Museo Slab';
    src: url('fonts/museo_slab_500-webfont.eot');
    src: url('fonts/museo_slab_500-webfont.eot?#iefix') format('embedded-opentype'), url('fonts/museo_slab_500-webfont.woff') format('woff'), url('fonts/museo_slab_500-webfont.ttf') format('truetype'), url('fonts/museo_slab_500-webfont.svg#MuseoSlab500') format('svg');
    font-weight: normal;
    font-style: normal;
}


// CSS Reset
@import "bootstrap/less/reset.less";

// Core variables and mixins
@import "variables.less"; // Modify this for custom colors, font-sizes, etc

@import "bootstrap/less/mixins.less";

// Grid system and page structure
@import "bootstrap/less/scaffolding.less";
@import "bootstrap/less/grid.less";
@import "bootstrap/less/layouts.less";

// Base CSS
@import "bootstrap/less/type.less";
@import "bootstrap/less/code.less";
@import "bootstrap/less/forms.less";
@import "bootstrap/less/tables.less";

// Components: common
@import "bootstrap/less/sprites.less";
@import "bootstrap/less/dropdowns.less";
@import "bootstrap/less/wells.less";
@import "bootstrap/less/component-animations.less";
@import "bootstrap/less/close.less";

// Components: Buttons & Alerts
@import "bootstrap/less/buttons.less";
@import "bootstrap/less/button-groups.less";
@import "bootstrap/less/alerts.less"; // Note: alerts share common CSS with buttons and thus have styles in buttons.less

// Components: Nav
@import "bootstrap/less/navs.less";
@import "bootstrap/less/navbar.less";
@import "bootstrap/less/breadcrumbs.less";
@import "bootstrap/less/pagination.less";
@import "bootstrap/less/pager.less";

// Components: Popovers
@import "bootstrap/less/modals.less";
@import "bootstrap/less/tooltip.less";
@import "bootstrap/less/popovers.less";

// Components: Misc
@import "bootstrap/less/thumbnails.less";
@import "bootstrap/less/media.less";
@import "bootstrap/less/labels-badges.less";
@import "bootstrap/less/progress-bars.less";
@import "bootstrap/less/accordion.less";
@import "bootstrap/less/carousel.less";
@import "bootstrap/less/hero-unit.less";

// Responsiveness
@import "bootstrap/less/responsive.less"; 

// Utility classes
@import "bootstrap/less/utilities.less"; // Has to be last to override when necessary

/* 
 * Scaffolding overrides
 */

body {
    background: url('images/bg.png') repeat @bodyBackground;
}

.navbar-static-top {
    .brand {
        font-family: @brandFontFamily;
        font-size: @navbarInverseBrandFontSize;

        // Align it with the text of the sidebar links
        margin-left: 15px;
    }
}

body > .container {
    // Color the whole container like the sidebar to fix faux columns
    background: url('images/sidebar_bg.png') repeat @sidebarBackground;

    .border-radius(@borderRadiusLarge);

    // Make some space, eh.
    margin-top: 40px;
    margin-bottom: 40px;
}


/*
 * Sidebar
 *
 * The .container holds the sidebar's background and the sidebar is transparent, to allow
 * the sidebar to appear to span the whole height of the .container.
 *
 */

.container aside {
    // Add border-radius in upper-left corner.
    .border-radius(@baseBorderRadius 0 0 0);

    nav { 
        margin-top: 80px;
        border-top: 1px solid #1c1f20; 

        ul li {
            font-size: @fontSizeLarge;
            // TODO: variables?
            background: #20282B;
            // TODO? IE?
            border-top: 1px solid rgba(255,255,255, 0.05);
            border-bottom: 1px solid rgba(0,0,0, 0.75);
            border-right: 1px solid rgba(0,0,0, 0.75);
            border-left: 1px solid rgba(0,0,0, 0.75);
            float: none;

            i {
                margin-right: 5px;
            }

            &.selected {
                .gradientBar(#ff764e, #d64926); // TODO: variables?
                border-top: 1px solid #d27349; 
                border-bottom: 1px solid rgba(0,0,0,0.9);

                a:hover {
                    // When hovering the selected item, don't make it 
                    // darker, instead do nothing
                    background-color: transparent !important;
                }
            }

            a {
                // Make the <a> elements take full width by using 
                // display: block, increasing the click area.
                font-family: @serifFontFamily;
                padding: @paddingMedium;
                display: block; 
                color: @white;
                text-shadow: 0 1px 1px rgba(0,0,0,0.75);

                // Make the background of the button darker when hovering
                &:hover {
                    background-color: @blueBlacker !important;
                    // Keep the white color (override)
                    color: @white;
                }
            }
        }
    }

}

/*
 * Content - the main content area with white background
 */

#content {
    // Don't overlap the floating sidebar
    border-left: 1px solid #2d3134;
    background-color: @white;

    .kpi {
        font-size: @fontSizeHuge;
        font-family: @serifFontFamily;
    }

    .kpi + div small {
        .text-overflow();
        display: block;
    }

    small {
        color: @gray777;
    }

    // Add border-radius in upper-right and lower-right corners
    .border-radius(0 @baseBorderRadius @baseBorderRadius 0);
    border-top: 1px solid #b8c1c7;
    border-right: 1px solid #b8c1c7;

    header {
        .gradientBar(@pageHeaderBackground, @pageHeaderBackgroundHighlight);

        border-top: 1px solid rgba(255,255,255,0.55);
        border-bottom: 1px solid #a3a3a3;

        padding-left: @gridGutterWidth; // TODO: responsive
        padding-bottom: 0;

        .border-radius(0 @baseBorderRadius 0 0);

        text-shadow: 0 1px 1px @white;

        /*
         * Allow a <div class="pull-right"> in a page-header, 
         * where buttons can be placed.
         */
        .pull-right {
            line-height: @fontSizeHuge + 18px;
            margin-right: 10px;
        }

        .btn {
            // Darken borders on buttons in page headers
            border-color: rgba(0,0,0,.25) rgba(0,0,0,.25) rgba(0,0,0,.30);
        }


        h1, h2 {
            // Decrease header size somewhat
            font-size: @fontSizeHuge;
            line-height: @fontSizeHuge + 22px;
            // Repeat to override
            text-shadow: 0 1px 1px @white;
            font-weight: normal;
            margin: 0;
        }
    }

    .sub-header {
        padding-left: 20px;
        .gradientBar(#e5edf2, #cdd5da);
        text-shadow: 0px 1px 0px rgba(255,255,255, 0.75);
        border-top: 1px solid #CFD6DB;
        border-bottom: 1px solid rgba(0,0,0, 0.3);

        h2, h3 {
            font-size: @fontSizeSmall;
            margin: 0;
            font-family: @sansFontFamily;
            font-weight: normal;
            line-height: 26px;
        }
    }

    section {
        .row-fluid {
            padding-left: @gridGutterWidth; // TODO: responsive
            padding-right: @gridGutterWidth;
            padding-top: 15px;
            padding-bottom: 10px;
            .box-sizing(border-box); // TODO: responsive? decrease width
        }
    }

    .row-fluid-alternate-bg {
        background-color: #fafafa;
    }
}

/*
 * Responsiveness
 */

/* 
 *
 * Some positioning tweaks for the content area
 *
 * We want to remove the margin-left of the content area, to position it just next to the sidebar.
 * If we do that, the width of the element is modified and thus we readd the width of the removed margin.
 *
 * However, since the size of the margin differs in different screen sizes, we need to do this multiple times
 * using media queries.
 * 
 * The width of the content area is defined by @contentColumns in variables.less.
 *
 */

// Small laptops, portrait tablets
@media (min-width: 768px) and (max-width: 979px) {
    #content-wrapper {
        margin-left: 0;
        width: (@gridColumnWidth768 * @contentColumns) + (@gridGutterWidth768 * (@contentColumns - 1)) + @gridGutterWidth768;
    }
}

// Default
@media (min-width: 980px) and (max-width: 1199px) {
    #content-wrapper {
        margin-left: 0;
        width: (@gridColumnWidth * @contentColumns) + (@gridGutterWidth * (@contentColumns - 1)) + @gridGutterWidth;
    }
}

// Large display
@media (min-width: 1200px) {
    #content-wrapper {
        margin-left: 0;
        width: (@gridColumnWidth1200 * @contentColumns) + (@gridGutterWidth1200 * (@contentColumns - 1)) + @gridGutterWidth1200;
    }
}


/*
 * Forms
 */

// TODO: prepend/append, selects
/*
 * Provide a nice outline for all <input type="text">, with different
 * colors depending on the state of the input (error, warning, success).
 *
 * We use a 'hardened' box-shadow to create the outline.
 *
 */
.control-group {
    /*
     * Keep the standard text color of input labels when
     * the input has an error. Colorizing it makes it too colorful
     * for Inspiritas.
     */
    label {
        color: @textColor !important;
    }

    .help-inline {
        // Increase from 5px
        padding-left: 15px;
    }

    /*
     * Create the outline using box-shadow (see above comment)
     */
    input[type=text], textarea {
        @shadow: 0 0 0 @inputOutlineSize @inputOutlineColor, 
            inset 0 2px 3px @inputOutlineColor;
        .box-shadow(@shadow);

    }

    /*
     * Override the default focus outline for the elements that are using our 
     * nicer outline.
     */
    textarea:focus, input[type=text]:focus {
        .box-shadow(0 0 0 @inputOutlineSize #e3eff5);
    }

    /*
     * Color the outline differently depending on state.
     */
    &.error {
        input[type=text], textarea {
            box-shadow: 0 0 0 @inputOutlineSize @errorOutlineColor,
                inset 0 2px 3px @errorOutlineColor;
        }
    }

    &.warning {
        input[type=text], textarea {
            box-shadow: 0 0 0 @inputOutlineSize @warningOutlineColor,
                inset 0 2px 3px @warningOutlineColor;
        }
    }

    &.success {
        input[type=text], textarea {
            box-shadow: 0 0 0 @inputOutlineSize @successOutlineColor,
                inset 0 2px 3px @successOutlineColor;
        }
    }
}

.form-horizontal {
    // Left-align the centered, Bootstrappy-looking, input labels
    .control-label {
        text-align: left;
    }

    .help-block {
        font-size: @fontSizeSmall;
        line-height: @fontSizeSmall + 4px;
    }

}

/*
 * Buttons
 */

.btn {
    text-shadow: @white !important;
    .box-shadow(none);

    &:hover {
        // Don't fade the background upwards
        background-position: 0 0;

        // Create a blue outline
        .box-shadow(0 0 5px #b6d4e8); 
    }
}


.btn-primary {
    text-shadow: 0 1px 2px @orangeDark !important;

    &:hover {
        // Don't fade the background upwards
        background-position: 0 0;

        // Decrease the contrast of the top border's color
        // TODO: IE?
        border-top-color: rgba(0,0,0,.0);

        // Create an orange outline
        .box-shadow(0 0 4px @orangeLighter);
    }
}
